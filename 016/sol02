#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>  // For INT_MAX and INT_MIN

using namespace std;

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        int closestSum = nums[0] + nums[1] + nums[2];

        for (int i = 0; i < n - 2; ++i) {
            int left = i + 1;
            int right = n - 1;

            while (left < right) {
                int currentSum = nums[i] + nums[left] + nums[right];
                if (currentSum == target) {
                    return currentSum; // Found the exact target
                }

                if (abs(currentSum - target) < abs(closestSum - target)) {
                    closestSum = currentSum;
                }

                if (currentSum < target) {
                    ++left;
                } else {
                    --right;
                }
            }
        }

        return closestSum;
    }
};

int main() {
    Solution solution;
    vector<int> nums1 = {-1, 2, 1, -4};
    int target1 = 1;
    cout << "Closest sum: " << solution.threeSumClosest(nums1, target1) << endl; // Output: 2

    vector<int> nums2 = {0, 0, 0};
    int target2 = 1;
    cout << "Closest sum: " << solution.threeSumClosest(nums2, target2) << endl; // Output: 0

    return 0;
}
